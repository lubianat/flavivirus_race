animate(p, 200, fps = 10, duration = 40, width = 800, height = 600, renderer = gifski_renderer("gganim.gif"))
library(tidyverse)
library(gganimate)
install.packages('gganimate')
library(tidyverse)
library(gganimate)
library(gapminder)
install.packages('gapminder')
library(gapminder)
theme_set(theme_classic())
gdp <- read.csv("https://raw.github.com/datasets/gdp/master/data/gdp.csv")
View(gdp)
words <- scan(
text="world income only total dividend asia euro america africa oecd",
what= character())
pattern <- paste0("(",words,")",collapse="|")
gdp  <- subset(gdp, !grepl(pattern, Country.Name , ignore.case = TRUE))
colnames(gdp) <- gsub("Country.Name", "country", colnames(gdp))
colnames(gdp) <- gsub("Country.Code", "code", colnames(gdp))
colnames(gdp) <- gsub("Value", "value", colnames(gdp))
colnames(gdp) <- gsub("Year", "year", colnames(gdp))
gdp$value <- round(gdp$value/1e9)
View(gdp)
gap <- gdp %>%
group_by(year) %>%
# The * 1 makes it possible to have non-integer ranks while sliding
mutate(rank = min_rank(-value) * 1,
Value_rel = value/value[rank==1],
Value_lbl = paste0(" ",value)) %>%
filter(rank <=10) %>%
ungroup()
View(gap)
temp = list.files(pattern="*.csv")
myfiles = lapply(temp, read.delim)
View(myfiles)
library(data.table)
myfiles = lapply(temp, fread)
View(myfiles)
?fread
myfiles = lapply(temp, read.csv, row.names=1)
myfiles = lapply(temp, read.csv, row.names=0)
View(myfiles)
myfiles = lapply(temp, fread %>% separate)
library(tidyr)
temp = list.files(pattern="*.csv")
myfiles = lapply(temp, fread %>% separate)
myfiles = lapply(myfiles, separate)
myfiles = apply(myfiles, separate)
myfiles = lapply(myfiles, FUN =  separate)
myfiles = lapply(myfiles, FUN =  tidyr::separate)
myfiles = lapply(myfiles, separate, sep = ',')
myfiles = lapply(temp, read.csv)
View(myfiles)
separate(myfiles[[1]])
myfiles[[1]]
B <- myfiles[[1]]
separate(B)
separate(data = B, col = 1)
separate(data = B, col = 1, into = c('year', 'count'))
separate(data = B, col = 1, into = c('year'))
myfiles = lapply(temp, separate,data = B, col = 1, into = c('year'))
myfiles = lapply(temp, read.csv)
myfiles = lapply(temp, separate,data = B, col = 1, into = c('counts'))
myfiles = lapply(temp,rownames_to_column, var = 'year')
myfiles = lapply(temp, as.data.frame)
myfiles = lapply(temp,rownames_to_column, var = 'year')
View(myfiles)
temp = list.files(pattern="*.csv")
myfiles = lapply(temp, read.csv)
myfiles = lapply(temp, separate,data = B, col = 1, into = c('counts'))
View(myfiles)
myfiles[[1]][["X[[i]]"]]
myfiles[[1]]
myfiles[[1]]
myfiles = lapply(temp,rownames_to_column, var = 'year')
myfiles = apply(temp,rownames_to_column, var = 'year')
temp = list.files(pattern="*.csv")
myfiles = lapply(temp, read.csv)
myfiles = lapply(temp, separate,data = B, col = 1, into = c('counts'))
myfiles = lapply(temp,rownames_to_column, var = 'year')
bla <- temp[[1]]
bla <- temp[[1]][[1]]
myfiles = lapply(temp, read.csv)
myfiles = lapply(temp, read.csv)
myfiles = lapply(myfiles, separate,data = B, col = 1, into = c('counts'))
myfiles = lapply(myfiles, separate,data = B, sep = ',', col = 1, into = c('counts'))
myfiles = lapply(temp, read.csv)
myfiles = lapply(myfiles, separate,data = B, sep = ',', col = 1, into = c('counts'))
myfiles = lapply(myfiles, separate, sep = ',', col = 1, into = c('counts'))
myfiles = lapply(myfiles,rownames_to_column, var = 'year')
x <- x[-1,]
B[-1,]
myfiles = lapply(myfiles, function(x){
x <- x[-1,]
})
temp
temp_names <- gsub('.csv', '\\1', temp)
for (i in myfiles){
myfiles[[i]]
}
for (i in 1:5){
myfiles[[i]]
}
for (i in 1:5){
print(myfiles[[i]])
}
for (i in 1:5){
myfiles[[i]]$disease <- tempnames[[i]]
}
for (i in 1:5){
myfiles[[i]]$disease <- temp_names[[i]]
}
bla <- myfiles %>% reduce(full_join, by = "year")
View(bla)
bla <- myfiles %>% reduce(inner_join, by = "year")
View(bla)
View(myfiles)
View(myfiles)
View(myfiles[[1]])
bla <- myfiles %>% purrr::reduce(inner_join, by = "year")
View(bla)
View(gdp)
full_table <- purrr::reduce('rbind', myfiles)
full_table <- purrr::reduce(rbind, myfiles)
full_table <- purrr::reduce(full_join,myfiles)
bla <- myfiles %>% reduce(full_join)
View(bla)
full_disease_table <- myfiles %>% reduce(full_join)
full_disease_table_transformed <- full_disease_table %>%
group_by(year) %>%
# The * 1 makes it possible to have non-integer ranks while sliding
mutate(rank = min_rank(-value) * 1,
Value_rel = value/value[rank==1],
Value_lbl = paste0(" ",value)) %>%
ungroup()
full_disease_table_transformed <- full_disease_table %>%
group_by(year) %>%
# The * 1 makes it possible to have non-integer ranks while sliding
mutate(rank = min_rank(-counts) * 1,
Value_rel = counts/counts[rank==1],
Value_lbl = paste0(" ",counts)) %>%
ungroup()
View(gdp)
full_disease_table$counts <- as.numeric(full_disease_table$counts)
full_disease_table_transformed <- full_disease_table %>%
group_by(year) %>%
# The * 1 makes it possible to have non-integer ranks while sliding
mutate(rank = min_rank(-counts) * 1,
Value_rel = counts/counts[rank==1],
Value_lbl = paste0(" ",counts)) %>%
ungroup()
p <- ggplot(full_disease_table_transformed, aes(rank, group = disease,
fill = as.factor(disease), color = as.factor(disease))) +
geom_tile(aes(y = counts/2,
height = counts,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(disease, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=counts,label = counts_lbl, hjust=0)) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
labs(title='{closest_state}', x = "", y = "GDP in billion USD",
caption = "Sources: World Bank | Plot generated by Nitish K. Mishra @nitishimtech") +
theme(plot.title = element_text(hjust = 0, size = 22),
axis.ticks.y = element_blank(),  # These relate to the axes post-flip
axis.text.y  = element_blank(),  # These relate to the axes post-flip
plot.margin = margin(1,1,1,4, "cm")) +
transition_states(year, transition_length = 4, state_length = 1) +
ease_aes('cubic-in-out')
animate(p, 200, fps = 10, duration = 40, width = 800, height = 600, renderer = gifski_renderer("gganim.gif"))
install.packages(gifski)
install.packages('gifski')
install.packages('gifski')
library(gifski)
animate(p, 200, fps = 10, duration = 40, width = 800, height = 600, renderer = gifski_renderer("gganim.gif"))
View(gap)
full_disease_table_transformed <- full_disease_table %>%
group_by(year) %>%
# The * 1 makes it possible to have non-integer ranks while sliding
mutate(rank = min_rank(-counts) * 1,
counts_rel = counts/counts[rank==1],
counts_lbl = paste0(" ",counts)) %>%
ungroup()
p <- ggplot(full_disease_table_transformed, aes(rank, group = disease,
fill = as.factor(disease), color = as.factor(disease))) +
geom_tile(aes(y = counts/2,
height = counts,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(disease, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=counts,label = counts, hjust=0)) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
labs(title='{closest_state}', x = "", y = "GDP in billion USD",
caption = "Sources: World Bank | Plot generated by Nitish K. Mishra @nitishimtech") +
theme(plot.title = element_text(hjust = 0, size = 22),
axis.ticks.y = element_blank(),  # These relate to the axes post-flip
axis.text.y  = element_blank(),  # These relate to the axes post-flip
plot.margin = margin(1,1,1,4, "cm")) +
transition_states(year, transition_length = 4, state_length = 1) +
ease_aes('cubic-in-out')
animate(p, 200, fps = 10, duration = 40, width = 800, height = 600, renderer = gifski_renderer("gganim.gif"))
animate(p, 200, fps = 10, duration = 20, width = 800, height = 600, renderer = gifski_renderer("gganim.gif"))
View(full_disease_table)
full_disease_table_transformed <- full_disease_table %>%
filter(year > 1950)
group_by(year) %>%
# The * 1 makes it possible to have non-integer ranks while sliding
mutate(rank = min_rank(-counts) * 1,
counts_rel = counts/counts[rank==1],
counts_lbl = paste0(" ",counts)) %>%
ungroup()
full_disease_table_transformed <- full_disease_table %>%
filter(year > 1950) %>%
group_by(year) %>%
# The * 1 makes it possible to have non-integer ranks while sliding
mutate(rank = min_rank(-counts) * 1,
counts_rel = counts/counts[rank==1],
counts_lbl = paste0(" ",counts)) %>%
ungroup()
p <- ggplot(full_disease_table_transformed, aes(rank, group = disease,
fill = as.factor(disease), color = as.factor(disease))) +
geom_tile(aes(y = counts/2,
height = counts,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(disease, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=counts,label = counts, hjust=0)) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
labs(title='{closest_state}', x = "", y = "GDP in billion USD",
caption = "Sources: World Bank | Plot generated by Nitish K. Mishra @nitishimtech") +
theme(plot.title = element_text(hjust = 0, size = 22),
axis.ticks.y = element_blank(),  # These relate to the axes post-flip
axis.text.y  = element_blank(),  # These relate to the axes post-flip
plot.margin = margin(1,1,1,4, "cm")) +
transition_states(year, transition_length = 4, state_length = 1) +
ease_aes('cubic-in-out')
animate(p, 200, fps = 10, duration = 20, width = 800, height = 600, renderer = gifski_renderer("gganim.gif"))
full_disease_table_transformed <- full_disease_table %>%
filter(year > 1960) %>%
group_by(year) %>%
# The * 1 makes it possible to have non-integer ranks while sliding
mutate(rank = min_rank(-counts) * 1,
counts_rel = counts/counts[rank==1],
counts_lbl = paste0(" ",counts)) %>%
ungroup()
p <- ggplot(full_disease_table_transformed, aes(rank, group = disease,
fill = as.factor(disease), color = as.factor(disease))) +
geom_tile(aes(y = counts/2,
height = counts,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(disease, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=counts,label = counts, hjust=0)) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
labs(title='{closest_state}', x = "", y = "GDP in billion USD",
caption = "Sources: World Bank | Plot generated by Nitish K. Mishra @nitishimtech") +
theme(plot.title = element_text(hjust = 0, size = 22),
axis.ticks.y = element_blank(),  # These relate to the axes post-flip
axis.text.y  = element_blank(),  # These relate to the axes post-flip
plot.margin = margin(1,1,1,4, "cm")) +
transition_states(year, transition_length = 4, state_length = 1) +
ease_aes('cubic-in-out')
animate(p, 200, fps = 10, duration = 25, width = 800, height = 600, renderer = gifski_renderer("gganim.gif"))
full_disease_table_transformed$counts <- round(full_disease_table_transformed$counts)
p <- ggplot(full_disease_table_transformed, aes(rank, group = disease,
fill = as.factor(disease), color = as.factor(disease))) +
geom_tile(aes(y = counts/2,
height = counts,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(disease, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=counts,label = counts, hjust=0)) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
labs(title='{closest_state}', x = "", y = "GDP in billion USD",
caption = "Sources: World Bank | Plot generated by Nitish K. Mishra @nitishimtech") +
theme(plot.title = element_text(hjust = 0, size = 22),
axis.ticks.y = element_blank(),  # These relate to the axes post-flip
axis.text.y  = element_blank(),  # These relate to the axes post-flip
plot.margin = margin(1,1,1,4, "cm")) +
transition_states(year, transition_length = 4, state_length = 1) +
ease_aes('cubic-in-out')
full_disease_table_transformed <- full_disease_table %>%
filter(year > 1970) %>%
group_by(year) %>%
# The * 1 makes it possible to have non-integer ranks while sliding
mutate(rank = min_rank(-counts) * 1,
counts_rel = counts/counts[rank==1],
counts_lbl = paste0(" ",counts)) %>%
ungroup()
full_disease_table_transformed$counts <- round(full_disease_table_transformed$counts)
p <- ggplot(full_disease_table_transformed, aes(rank, group = disease,
fill = as.factor(disease), color = as.factor(disease))) +
geom_tile(aes(y = counts/2,
height = counts,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(disease, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=counts,label = counts, hjust=0)) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
labs(title='{closest_state}', x = "", y = "GDP in billion USD",
caption = "Sources: World Bank | Plot generated by Nitish K. Mishra @nitishimtech") +
theme(plot.title = element_text(hjust = 0, size = 22),
axis.ticks.y = element_blank(),  # These relate to the axes post-flip
axis.text.y  = element_blank(),  # These relate to the axes post-flip
plot.margin = margin(1,1,1,4, "cm")) +
transition_states(year, transition_length = 4, state_length = 1) +
ease_aes('cubic-in-out')
p <- ggplot(full_disease_table_transformed, aes(rank, group = disease,
fill = as.factor(disease), color = as.factor(disease))) +
geom_tile(aes(y = counts/2,
height = counts,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(disease, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=counts,label = counts, hjust=0)) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
labs(title='{closest_state}', x = "", y = "PubMed articles",
caption = "Sources: World Bank | Plot generated by Tiago Lubiana @lubianat") +
theme(plot.title = element_text(hjust = 0, size = 22),
axis.ticks.y = element_blank(),  # These relate to the axes post-flip
axis.text.y  = element_blank(),  # These relate to the axes post-flip
plot.margin = margin(1,1,1,4, "cm")) +
transition_states(year, transition_length = 4, state_length = 1) +
ease_aes('cubic-in-out')
animate(p, 200, fps = 10, duration = 25, width = 800, height = 600, renderer = gifski_renderer("gganim.gif"))
View(full_disease_table_transformed)
full_disease_table <- myfiles %>% reduce(full_join)
View(full_disease_table)
full_disease_table_transformed <- full_disease_table %>%
filter(year > 1970) %>%
group_by(year) %>%
# The * 1 makes it possible to have non-integer ranks while sliding
mutate(rank = min_rank(-counts) * 1,
counts_rel = counts/counts[rank==1],
counts_lbl = paste0(" ",counts)) %>%
ungroup()
r
full_disease_table_transformed <- full_disease_table %>%
filter(year > 1970) %>%
group_by(year) %>%
# The * 1 makes it possible to have non-integer ranks while sliding
mutate(rank = min_rank(-counts) * 1,
counts_rel = counts/counts[rank==1],
counts_lbl = paste0(" ",counts)) %>%
ungroup()
full_disease_table_transformed <- full_disease_table %>%
filter(year > 1970)
View(full_disease_table)
library(data.table)
library(tidyr)
temp = list.files(pattern="*.csv")
temp_names <- gsub('.csv', '\\1', temp)
myfiles = lapply(temp, read.csv)
myfiles = lapply(myfiles, separate, sep = ',', col = 1, into = c('counts'))
myfiles = lapply(myfiles,rownames_to_column, var = 'year')
myfiles = lapply(myfiles, function(x){
x <- x[-1,]
})
for (i in 1:5){
myfiles[[i]]$disease <- temp_names[[i]]
}
full_disease_table <- myfiles %>% reduce(full_join)
full_disease_table$counts <- as.numeric(full_disease_table$counts)
full_disease_table_transformed <- full_disease_table %>%
filter(year > 1970) %>%
group_by(year) %>%
# The * 1 makes it possible to have non-integer ranks while sliding
mutate(rank = min_rank(-counts) * 1,
counts_rel = counts/counts[rank==1],
counts_lbl = paste0(" ",counts)) %>%
ungroup()
full_disease_table_transformed$counts <- round(full_disease_table_transformed$counts)
p <- ggplot(full_disease_table_transformed, aes(rank, group = disease,
fill = as.factor(disease), color = as.factor(disease))) +
geom_tile(aes(y = counts/2,
height = counts,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(disease, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=counts,label = counts, hjust=0)) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
labs(title='{closest_state}', x = "", y = "PubMed articles",
caption = "Sources: World Bank | Plot generated by Tiago Lubiana @lubianat") +
theme(plot.title = element_text(hjust = 0, size = 22),
axis.ticks.y = element_blank(),  # These relate to the axes post-flip
axis.text.y  = element_blank(),  # These relate to the axes post-flip
plot.margin = margin(1,1,1,4, "cm")) +
transition_states(year, transition_length = 4, state_length = 1) +
ease_aes('cubic-in-out')
p
animate(p, 200, end_pause = 1, fps = 10, duration = 25, width = 800, height = 600, renderer = gifski_renderer("gganim.gif"))
anim <- animate(p)
magick::image_write(anim, path="myanimation.gif")
install.packages('magick')
P
p
anim <- animate(p ,end_pause = 1)
anim <- animate(p ,end_pause = 1)
anim
anim <- animate(p , nframes = 40, end_pause = 1)
anim
anim <- animate(p , end_pause = 1)
animate
anim
anim_save(filename = 'basic_flavivirus_race.gif')
p <- ggplot(full_disease_table_transformed, aes(rank, group = disease,
fill = as.factor(disease), color = as.factor(disease))) +
geom_tile(aes(y = counts/2,
height = counts,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(disease, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=counts,label = counts, hjust=0)) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
labs(title='{closest_state}', x = "", y = "PubMed articles about flavivirus - diseases",
caption = "Sources: PubMed| Plot generated by Tiago Lubiana @lubianat") +
theme(plot.title = element_text(hjust = 0, size = 22),
axis.ticks.y = element_blank(),  # These relate to the axes post-flip
axis.text.y  = element_blank(),  # These relate to the axes post-flip
plot.margin = margin(1,1,1,4, "cm")) +
transition_states(year, transition_length = 4, state_length = 1) +
ease_aes('cubic-in-out')
p
anim <- animate(p , end_pause = 1)
anim_save(filename = 'basic_flavivirus_race.gif')
p <- ggplot(full_disease_table_transformed, aes(rank, group = disease,
fill = as.factor(disease), color = as.factor(disease))) +
geom_tile(aes(y = counts/2,
height = counts,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(disease, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=counts,label = counts, hjust=0)) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
labs(title='{closest_state}', x = "", y = "PubMed articles about flavivirus - diseases",
caption = "Sources: PubMed| Plot generated by Tiago Lubiana @lubianat") +
theme(plot.title = element_text(hjust = 0, size = 22),
axis.ticks.y = element_blank(),  # These relate to the axes post-flip
axis.text.y  = element_blank(),  # These relate to the axes post-flip
plot.margin = margin(1,1,1,4, "cm")) +
transition_states(year, transition_length = 4, state_length = 1) +
ease_aes('cubic-in-out')
p
anim <- animate(p , end_pause = 1)
anim_save(filename = 'basic_flavivirus_race.gif')
